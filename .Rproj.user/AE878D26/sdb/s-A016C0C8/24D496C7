{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Intro to Programming Concepts\"\nauthor: \"Nikki Rubinstein\"\ndate: \"Saturday, June 25, 2016\"\noutput: ioslides_presentation\nruntime: shiny\n--- \n\n```{r, include=FALSE}\nlibrary(shiny)\nlibrary(jpeg)\nlibrary(png)\nlibrary(grid)\n```\n\n## Telling your computer what to do\n<!-- concept of programming languages -->\n<!-- play simon says -->\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//Olate_dogs_-_on_wheel.jpeg\")\ngrid.raster(img) \n``` \n\n<!-- image source: https://upload.wikimedia.org/wikipedia/commons/d/d8/Olate_dogs_-_on_wheel.jpeg -->\n\n## Telling your computer what to do\n\nSome programming languages you might have heard of:  \n\n* R\n* Matlab\n* Python\n* JavaScript\n* html\n\n## Interacting with your computer\n<!-- introduce the idea of variables, assignment and memory storage\nat this point people should name their teams / tables -->\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readPNG(\"fig//Abstract_art_(PSF).png\")\ngrid.raster(img) \n``` \n<!-- image source: https://upload.wikimedia.org/wikipedia/commons/6/66/Abstract_art_(PSF).png -->\n\n## Interacting with your computer\n\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//pexels-photo.jpg\")\ngrid.raster(img) \n``` \n<!-- image source: https://static.pexels.com/photos/15393/pexels-photo.jpg -->\n\n## Interacting with your computer\nCreating variables\n\n```{r}\nbaby <- 'Meredith'\nsculpture <- 10\n```\n```{r}\nbaby \nsculpture\n```\n\n## What types of information does your computer understand?\n<!-- These are the building blocks of our conversation with the computer, much like words are the building blocks of a book -->\n* **numeric** \n    + integers, e.g. `1, 2, 3`\n    + doubles, e.g. `1.25, 3.78`\n    + complex numbers, e.g. `3 + 2i`\n* **character or string** \n    + e.g. `\"Research\", \"Platforms\"`\n* **logical or Boolean** \n    + e.g. `TRUE` and `FALSE`\n\n## How can we group information?\n\n\n\n<!-- much like how we create sentences from words -->\n* vectors / tuples\n* matrices / data.frames / arrays\n* lists / structures\n* dictionaries\n\n## vectors / tuples\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//lechner-50119_960_720.jpg\")\ngrid.raster(img) \n``` \n<!-- image source: https://pixabay.com/static/uploads/photo/2012/06/16/20/52/lechner-50119_960_720.jpg -->\n\n## vectors / tuples \n```{r}\nvector1 <- 1:10\nvector2 <- c(\"learning\", \"to\", \"code\", \"is\", \"fun\")\n```\n```{r}\nvector1\nvector2\n```\n\n## matrices / data.frames / arrays\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//House_of_Air_The_Matrix.jpg\")\ngrid.raster(img) \n``` \n<!-- image source: https://upload.wikimedia.org/wikipedia/commons/f/fa/House_of_Air_The_Matrix.jpg -->\n\n## matrices / data.frames / arrays\n```{r}\nPlatoonLeads <- data.frame(\n  list(\n    platoon = c(\"Data Wranglers\", \n                \"Data Miners\", \n                \"Data Vizards\", \n                \"Cadventurers\"),\n    name    = c(\"Kerry Halupka\", \n                \"Kim Doyle\", \n                \"Isabell Kiral-Kornek\", \n                \"Louise van der Werff\")))\n```\n```{r}\nPlatoonLeads\n```\n## lists / structures\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//musical instrument collection.jpg\")\ngrid.raster(img) \n``` \n<!-- image source: http://s0.geograph.org.uk/geophotos/03/54/79/3547925_df1f2e83.jpg -->\n\n## lists / structures\n```{r}\nshoppingList <- list(\n  breakfast = c(\"cereal\", \"milk\", \"orange juice\", \"banana\"),\n  lunch     = c(\"bread\", \"cheese\", \"tomato\"),\n  dinner    = c(\"frozen pizza\", \"chocolate mousse\")\n  )\n```\n```{r}\nshoppingList\n```\n## dictionaries\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//dictionary.jpg\")\ngrid.raster(img) \n``` \n<!-- image source: https://pixabay.com/static/uploads/photo/2015/12/23/22/16/collaboration-1106196_960_720.jpg -->\n\n## dictionaries\n```{python}\nIMDBRatings = {\"Game of Thrones\": 9.4, \n    \"Sherlock\": 9.2, \n    \"Firefly\": 9.1, \n    \"Friends\": 8.9}\n\nfor movie, rating in IMDBRatings.items():\n    print movie + ': ' + str(rating)\n```\n## How to add flexibility to the conversation\n**If statements**\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//Am I hungry.jpg\")\ngrid.raster(img) \n``` \n\n## How to add flexibility to the conversation\n**If statements**\n```{r,echo=F}\nselectInput(\"hungry\", \"Am I hungry?\", choices = c(TRUE, FALSE))\n```\n```{r,eval=F}\nif (hungry){\n  print(\"GIVE ME A TIM TAM!!!\")\n} else {\n  print(\"No tim tam for me, thanks!\")\n}\n```\n```{r,echo=F}\nrenderText({if (input$hungry){\n  print(\"GIVE ME A TIM TAM!!!\")\n} else {\n  print(\"No tim tam for me, thanks!\")\n}})\n```\n\n## How to add flexibility to the conversation\n**For loops**\n```{r fig.width=3, fig.height=4,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//Man_and_woman_dancing_a_waltz.jpg\")\ngrid.raster(img) \n``` \n<!-- image source: https://upload.wikimedia.org/wikipedia/commons/4/49/Man_and_woman_dancing_a_waltz_(rbm-QP301M8-1887-197a~6).jpg -->\n\n## How to add flexibility to the conversation\n**For loops**\n```{r}\nfor (beats in 1:4){\n  print(\"bring left foot to right foot\")\n  print(\"step left foot back to original position\")\n  print(\"bring right foot to left foot\")\n  print(\"step left foot back to original position\")\n}\n```\n## How to add flexibility to the conversation\n**Functions**\n```{r fig.width=5, fig.height=5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//cooking.jpg\")\ngrid.raster(img) \n``` \n<!-- image source: https://pixabay.com/static/uploads/photo/2015/10/30/05/48/cooking-1013455_960_720.jpg -->\n\n## How to add flexibility to the conversation\n**Functions**\n```{r, echo=F}\nselectInput(\"day\", \"Day of the week\", choices = c(\"Monday\", \"Tuesday\", \n                                                  \"Wednesday\", \"Thursday\",\n                                                  \"Friday\", \"Saturday\",\n                                                  \"Sunday\"))\n```\n```{r}\nmoodCalendar <- function(day){\n  if (day %in% c(\"Friday\", \"Saturday\", \"Sunday\")){\n    print(paste(day, \"is a happy day\"))\n  } else if (day %in% c(\"Monday\", \"Tuesday\")){\n    print(paste(day, \"is a grumpy day\"))\n  } else {\n    print(paste(day, \"is a neutral day\"))\n  }}\n```\n```{r, echo=F}\nrenderText({moodCalendar(input$day)})\n```\n\n## Where to find help\n```{r fig.width=5, fig.height=2,echo=FALSE, fig.align='center'}\nimg <- readPNG(\"fig//stackoverflow.png\")\ngrid.raster(img) \n```\n```{r fig.width=5, fig.height=2, echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//google.jpg\")\ngrid.raster(img) \n``` \n\n## Making mistakes is the best way to learn\n```{r fig.width=7.5, fig.height=4.5,echo=FALSE, fig.align='center'}\nimg <- readJPEG(\"fig//it's ok to make mistakes.jpg\")\ngrid.raster(img) \n``` \n\n## Where to learn more\n\n* Sign up for one of our training courses: [http://melbourne.resbaz.edu.au/participate](http://melbourne.resbaz.edu.au/participate)\n* [http://www.w3schools.com/](http://www.w3schools.com/)\n* [MIT Open Courseware](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-094-introduction-to-matlab-january-iap-2010/)\n* [Coursera Data Science Specialisation](https://www.coursera.org/specializations/jhu-data-science)",
    "created" : 1466426703866.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2786816239",
    "id" : "24D496C7",
    "lastKnownWriteTime" : 1466426753,
    "last_content_update" : 1466426753095,
    "path" : "~/Intro-to-programming-concepts/Intro_slides.Rmd",
    "project_path" : "Intro_slides.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}